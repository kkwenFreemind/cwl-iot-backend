package community.waterlevel.iot.module.device.model.entity;

import community.waterlevel.iot.common.annotation.DataPermission;
import jakarta.persistence.*;
import lombok.Getter;
import lombok.Setter;
import org.hibernate.annotations.SQLDelete;
import org.hibernate.annotations.SQLRestriction;

import java.time.LocalDateTime;
import java.util.UUID;

/**
 * JPA entity mapping for `iot_device` table.
 * Follows project conventions (soft delete via @SQLDelete/@SQLRestriction and DataPermission).
 */
@Getter
@Setter
@Entity
@Table(name = "iot_device")
@SQLDelete(sql = "UPDATE iot_device SET is_deleted = 1 WHERE device_id = ?")
@SQLRestriction("is_deleted = 0")
@DataPermission(deptAlias = "d", deptIdColumnName = "deptId", userAlias = "u", userIdColumnName = "createdBy")
public class IotDeviceJpa {

    /**
     * Primary key: UUID generated by database function gen_random_uuid()
     */
    @Id
    @Column(name = "device_id", columnDefinition = "uuid")
    private UUID deviceId;

    @Column(name = "device_name", nullable = false)
    private String deviceName;

    @Column(name = "dept_id", nullable = false)
    private Long deptId;

    @Column(name = "device_model")
    private String deviceModel;

    @Column(name = "latitude")
    private Double latitude;

    @Column(name = "longitude")
    private Double longitude;

    /**
     * PostGIS geography point column. Marked read-only as DB trigger/function maintains it.
     */
    @Column(name = "geom", columnDefinition = "GEOGRAPHY(Point, 4326)", insertable = false, updatable = false)
    private String geom;

    @Column(name = "location")
    private String location;

    @Convert(converter = DeviceStatusConverter.class)
    @Column(name = "status", nullable = false)
    private DeviceStatus status = DeviceStatus.INACTIVE;

    @Column(name = "created_by", nullable = false)
    private Long createdBy;

    @Column(name = "created_at", nullable = false)
    private LocalDateTime createdAt;

    @Column(name = "last_seen")
    private LocalDateTime lastSeen;

    @Column(name = "is_deleted", nullable = false)
    private Integer isDeleted = 0;

    @Column(name = "updated_at")
    private LocalDateTime updatedAt;

}
